- name: change admin password
  gather_facts: no
  serial: 1
  hosts: all
  connection: local
  roles:
    - juniper.junos

  vars:
    ansible_python_interpreter: "/Users/charlea.fleming/Desktop/py-venv/gather_facts-testing/bin/python3"
    ansible_public_key: "{{ lookupfile('file', '/Users/charlea.fleming/Desktop/py-venv/gather_facts-testing/id_rsa.pub') }}"
  vars_prompt:
    - name: "USER"
      prompt: "username"
      private: no
    - name: "PASSWD"
      prompt: "password"
      private: yes

  tasks:
    - name: show local accounts
      juniper_junos_command:
        host: "{{ ansible_host }}"
        port: "22"
        user: "{{ USER }}"
        passwd: "{{ PASSWD }}"
        commands:
          - "show configuration system login"
        format: text
      register: local_accounts
    - name: is admin present
      debug:
        msg: '{{ local_accounts.stdout_lines | select("search", "admin") | list }}'
      register: admin_account_status
    - name: set admin password
      juniper_junos_config:
        host: "{{ ansible_host }}"
        port: "22"
        user: "{{ USER }}"
        passwd: "{{ PASSWD }}"
        load: set
        lines:
          - "set system login user admin authentication encrypted-password $6$"
        format: text
        check: true
        commit: true
      register: response
      when: admin == "yes"
    - name: commit compare
      debug:
        var: response
    - name: create admin account
      juniper_junos_config:
        host: "{{ ansible_host }}"
        port: "22"
        user: "{{ USER }}"
        passwd: "{{ PASSWD }}"
        load: set
        lines:
          - "set system login user admin class super-user"
          - "set system login user admin authentication encrypted-password $6$"
        check: true
        commit: true
      when: admin == "no"
      register: responsee
    - name: commit compare
      debug:
        var: responsee
